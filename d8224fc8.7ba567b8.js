(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{150:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return l})),t.d(n,"rightToc",(function(){return m})),t.d(n,"default",(function(){return c}));var r=t(2),i=t(9),a=(t(0),t(155)),o={id:"getting-started",title:"Getting Started"},l={id:"guide/getting-started",isDocsHomePage:!1,title:"Getting Started",description:"Installation",source:"@site/docs/guide/getting-started.md",permalink:"/formik-material-ui/docs/guide/getting-started",editUrl:"https://github.com/stackworx/formik-material-ui/edit/master/docs/guide/getting-started.md",sidebar:"someSidebar",next:{title:"Creating Custom Components",permalink:"/formik-material-ui/docs/guide/custom-component"}},m=[{value:"Installation",id:"installation",children:[{value:"Material-UI Lab (Optional)",id:"material-ui-lab-optional",children:[]},{value:"Material-UI Pickers (Optional)",id:"material-ui-pickers-optional",children:[]}]},{value:"Quick Start",id:"quick-start",children:[]},{value:"Configuring Components",id:"configuring-components",children:[]},{value:"Quick Start (Lab)",id:"quick-start-lab",children:[]},{value:"Quick Start (Picker)",id:"quick-start-picker",children:[]},{value:"Configuring Components",id:"configuring-components-1",children:[]}],u={rightToc:m};function c(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},u,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"installation"},"Installation"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"yarn add formik formik-material-ui @material-ui/core\n")),Object(a.b)("h3",{id:"material-ui-lab-optional"},"Material-UI Lab (Optional)"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"yarn add formik-material-ui-lab @material-ui/lab\n")),Object(a.b)("h3",{id:"material-ui-pickers-optional"},"Material-UI Pickers (Optional)"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"yarn add formik-material-ui-pickers @date-io/date-fns@1.x date-fns\n")),Object(a.b)("h2",{id:"quick-start"},"Quick Start"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx",metastring:"{4,39,46}","{4,39,46}":!0}),"import * as React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { Button, LinearProgress } from '@material-ui/core';\nimport { TextField } from 'formik-material-ui';\n\ninterface Values {\n  email: string;\n  password: string;\n}\n\nfunction App() {\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      validate={values => {\n        const errors: Partial<Values> = {};\n        if (!values.email) {\n          errors.email = 'Required';\n        } else if (\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n        ) {\n          errors.email = 'Invalid email address';\n        }\n        return errors;\n      }}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          setSubmitting(false);\n          alert(JSON.stringify(values, null, 2));\n        }, 500);\n      }}\n    >\n      {({ submitForm, isSubmitting }) => (\n        <Form>\n          <Field\n            component={TextField}\n            name=\"email\"\n            type=\"email\"\n            label=\"Email\"\n          />\n          <br />\n          <Field\n            component={TextField}\n            type=\"password\"\n            label=\"Password\"\n            name=\"password\"\n          />\n          {isSubmitting && <LinearProgress />}\n          <br />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={isSubmitting}\n            onClick={submitForm}\n          >\n            Submit\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n")),Object(a.b)("p",null,"Note: that the ",Object(a.b)("inlineCode",{parentName:"p"},"Field")," wrapper is not used, for more details on why see the ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/formik-material-ui/docs/guide/faq"}),"FAQ"),"."),Object(a.b)("h2",{id:"configuring-components"},"Configuring Components"),Object(a.b)("p",null,"Several properties are purposefully excluded, please see the ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/formik-material-ui/docs/guide/faq"}),"FAQ")," for details."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),'import { TextField } from \'formik-material-ui\';\nimport InputAdornment from \'@material-ui/core/InputAdornment\';\nimport AccountCircle from \'@material-ui/icons/AccountCircle\';\n\n<TextField\n  name="customized"\n  label="Outlined"\n  variant="outlined"\n  InputProps={{\n    startAdornment: (\n      <InputAdornment position="start">\n        <AccountCircle />\n      </InputAdornment>\n    ),\n  }}\n/>;\n')),Object(a.b)("h2",{id:"quick-start-lab"},"Quick Start (Lab)"),Object(a.b)("p",null,"See ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://material-ui.com/components/about-the-lab/"}),"Material-UI Lab Info")," for more information"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx",metastring:"{4,31,52}","{4,31,52}":!0}),'import * as React from \'react\';\nimport { Formik, Form, Field } from \'formik\';\nimport { Button, LinearProgress } from \'@material-ui/core\';\nimport { Autocomplete, ToggleButtonGroup } from \'formik-material-ui-lab\';\nimport Box from \'@material-ui/core/Box\';\nimport ToggleButton from \'@material-ui/lab/ToggleButton\';\nimport FormatAlignLeftIcon from \'@material-ui/icons/FormatAlignLeft\';\nimport FormatAlignCenterIcon from \'@material-ui/icons/FormatAlignCenter\';\nimport FormatAlignRightIcon from \'@material-ui/icons/FormatAlignRight\';\nimport FormatAlignJustifyIcon from \'@material-ui/icons/FormatAlignJustify\';\n\nfunction App() {\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Formik\n        initialValues={{\n          toggle: null,\n          autocomplete: null,\n        }}\n        onSubmit={(values, { setSubmitting }) => {\n          setTimeout(() => {\n            setSubmitting(false);\n            alert(JSON.stringify(values, null, 2));\n          }, 500);\n        }}\n      >\n        {({ submitForm, isSubmitting, errors, touched }) => (\n          <Form>\n            <Box margin={1}>\n              <Field\n                component={ToggleButtonGroup}\n                name="toggle"\n                type="checkbox"\n              >\n                <ToggleButton value="left" aria-label="left aligned">\n                  <FormatAlignLeftIcon />\n                </ToggleButton>\n                <ToggleButton value="center" aria-label="centered">\n                  <FormatAlignCenterIcon />\n                </ToggleButton>\n                <ToggleButton value="right" aria-label="right aligned">\n                  <FormatAlignRightIcon />\n                </ToggleButton>\n                <ToggleButton value="justify" aria-label="justified" disabled>\n                  <FormatAlignJustifyIcon />\n                </ToggleButton>\n              </Field>\n            </Box>\n            <Box margin={1}>\n              <Field\n                name="autocomplete"\n                component={Autocomplete}\n                options={top100Films}\n                getOptionLabel={(option: Movie) => option.title}\n                style={{ width: 300 }}\n                renderInput={(params: AutocompleteRenderInputParams) => (\n                  <TextField\n                    {...params}\n                    error={touched[\'autocomplete\'] && !!errors[\'autocomplete\']}\n                    helperText={\n                      touched[\'autocomplete\'] && errors[\'autocomplete\']\n                    }\n                    label="Autocomplete"\n                    variant="outlined"\n                  />\n                )}\n              />\n            </Box>\n            <Box margin={1}>\n              <Button\n                variant="contained"\n                color="primary"\n                disabled={isSubmitting}\n                onClick={submitForm}\n              >\n                Submit\n              </Button>\n            </Box>\n          </Form>\n        )}\n      </Formik>\n    </MuiPickersUtilsProvider>\n  );\n}\n')),Object(a.b)("h2",{id:"quick-start-picker"},"Quick Start (Picker)"),Object(a.b)("p",null,"See ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://material-ui-pickers.dev/getting-started/installation"}),"Material-UI Pickers getting started")," for more information"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx",metastring:"{4-8,9,12,16,32,34,36}","{4-8,9,12,16,32,34,36}":!0}),'import * as React from \'react\';\nimport { Formik, Form, Field } from \'formik\';\nimport { Button, LinearProgress } from \'@material-ui/core\';\nimport {\n  TimePicker,\n  DatePicker,\n  DateTimePicker,\n} from \'formik-material-ui-pickers\';\nimport { MuiPickersUtilsProvider } from \'@material-ui/pickers\';\n\n// Depending on the library you picked\nimport DateFnsUtils from \'@date-io/date-fns\';\n\nfunction App() {\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Formik\n        initialValues={{\n          date: new Date(),\n          time: new Date(),\n          dateTime: new Date(),\n        }}\n        onSubmit={(values, { setSubmitting }) => {\n          setTimeout(() => {\n            setSubmitting(false);\n            alert(JSON.stringify(values, null, 2));\n          }, 500);\n        }}\n      >\n        {({ submitForm, isSubmitting }) => (\n          <Form>\n            <Field component={TimePicker} name="time" label="Time" />\n            <br />\n            <Field component={DatePicker} name="date" label="Date" />\n            <br />\n            <Field\n              component={DateTimePicker}\n              name="dateTime"\n              label="Date Time"\n            />\n            {isSubmitting && <LinearProgress />}\n            <br />\n            <Button\n              variant="contained"\n              color="primary"\n              disabled={isSubmitting}\n              onClick={submitForm}\n            >\n              Submit\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </MuiPickersUtilsProvider>\n  );\n}\n')),Object(a.b)("h2",{id:"configuring-components-1"},"Configuring Components"),Object(a.b)("p",null,"Several properties are purposefully excluded, please see the ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/formik-material-ui/docs/guide/faq"}),"FAQ")," for details."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),'import { TextField } from \'formik-material-ui\';\nimport InputAdornment from \'@material-ui/core/InputAdornment\';\nimport AccountCircle from \'@material-ui/icons/AccountCircle\';\n\n<TextField\n  name="customized"\n  label="Outlined"\n  variant="outlined"\n  InputProps={{\n    startAdornment: (\n      <InputAdornment position="start">\n        <AccountCircle />\n      </InputAdornment>\n    ),\n  }}\n/>;\n')))}c.isMDXComponent=!0},155:function(e,n,t){"use strict";t.d(n,"a",(function(){return s})),t.d(n,"b",(function(){return b}));var r=t(0),i=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function m(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var u=i.a.createContext({}),c=function(e){var n=i.a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=c(e.components);return i.a.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},d=i.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,u=m(e,["components","mdxType","originalType","parentName"]),s=c(t),d=r,b=s["".concat(o,".").concat(d)]||s[d]||p[d]||a;return t?i.a.createElement(b,l(l({ref:n},u),{},{components:t})):i.a.createElement(b,l({ref:n},u))}));function b(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=d;var l={};for(var m in n)hasOwnProperty.call(n,m)&&(l[m]=n[m]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var u=2;u<a;u++)o[u]=t[u];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);