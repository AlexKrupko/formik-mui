(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{150:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return p})),n.d(t,"default",(function(){return d}));var i=n(2),o=n(9),a=(n(0),n(156)),r={id:"custom-component",title:"Creating Custom Components"},s={id:"guide/custom-component",isDocsHomePage:!1,title:"Creating Custom Components",description:"Notes",source:"@site/docs/guide/custom-component.md",permalink:"/formik-material-ui/docs/guide/custom-component",editUrl:"https://github.com/stackworx/formik-material-ui/edit/master/docs/guide/custom-component.md",sidebar:"someSidebar",previous:{title:"Getting Started",permalink:"/formik-material-ui/docs/guide/getting-started"},next:{title:"Migrating",permalink:"/formik-material-ui/docs/guide/migrating"}},p=[{value:"Upper Casing Field",id:"upper-casing-field",children:[]}],c={rightToc:p};function d(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(i.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"notes"},"Notes"),Object(a.b)("p",null,"Add Wrappers have a corresponding function export (",Object(a.b)("inlineCode",{parentName:"p"},"fieldToTextField"),", ",Object(a.b)("inlineCode",{parentName:"p"},"fieldToCheckbox")," etc.) that encapsulate the logic used to map formik props into the Material-UI shapes"),Object(a.b)("h1",{id:"examples"},"Examples"),Object(a.b)("h2",{id:"upper-casing-field"},"Upper Casing Field"),Object(a.b)("p",null,"A simple test input that always uppercases the input"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-jsx"}),"import MuiTextField from '@material-ui/core/TextField';\nimport { fieldToTextField, TextFieldProps } from 'formik-material-ui';\n\nfunction UpperCasingTextField(props: TextFieldProps) {\n  const {\n    form: { setFieldValue },\n    field: { name },\n  } = props;\n  const onChange = React.useCallback(\n    event => {\n      const { value } = event.target;\n      setFieldValue(name, value ? value.toUpperCase() : '');\n    },\n    [setFieldValue, name]\n  );\n  return <MuiTextField {...fieldToTextField(props)} onChange={onChange} />;\n}\n")))}d.isMDXComponent=!0}}]);